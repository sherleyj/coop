{"version":3,"sources":["GameContext.js","Nav.js","Hooks.js","Coop.js","Player.js","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","GameProvider","props","useState","game","setGame","Provider","value","children","Nav","useContext","console","log","gameId","to","concat","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useGetNestedObject","nestedObj","pathArr","reduce","obj","key","undefined","Coop","gameidURL","useParams","getGameAPI","a","fetch","data","json","gameFromAPI","players","characters","message","playersToRender","map","p","turnText","playerid","character_0","character_1","character_0_name","character_1_name","dead","active","name","turn","link","className","coins","numPlayers","Player","playeridURL","chooseCharId","setChooseCharId","actOnId","setActOnId","actOnChecked","setActOnChecked","exchangePicks","setExchangePicks","numSelected","setNumSelected","action","e","target","actionTaken","takeAction","challenge","body","requestOptions","method","headers","JSON","stringify","can_challenge","challengeBlock","block","can_block","pass","loseCharacterAPI","characterToLose","getNestedObject","handleChooseCharChange","preventDefault","handleActOnChange","handleActOnSubmit","handleExchangePicksChange","influence","alive","losePlayer","stealing","cooping","exchanging","assassinating","passed","challenged","can_coop","blocked","blockedBy","character_0_active","character_1_active","actionChosen","active_players","Array","i","steal_players_form","type","checked","onChange","coop_assassinate_form","exchange_form","pTurnId","includes","someoneLosePlayer","length","onSubmit","onClick","disabled","msg","alert","forEach","push","GameIdForm","setGameId","history","useHistory","event","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.122caa95.chunk.js","sourcesContent":["import React, { \n    useState,\n    createContext,\n} from 'react';\nimport './App.css';\nimport { \n    useParams,\n} from \"react-router-dom\";\n\nexport const GameContext = createContext();\n\nexport const GameProvider = props => {\n\n  const [game, setGame] = useState({});\n\n  return (\n    <GameContext.Provider value={[game, setGame]}>{props.children}</GameContext.Provider>\n  );\n\n}\n\n","import React, {useContext} from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom'\nimport { GameContext } from './GameContext';\n\n\nfunction Nav() {\n\n    const [game, setGame]= useContext(GameContext);\n\n    console.log(\"FROM NAV, game.gameid: \" , game.gameId)\n    if (game.gameId) {\n        return (\n            <nav>\n                <Link to='/'>\n                    <h3>Home</h3>\n                </Link>\n                <Link to={\"/\".concat(game.gameId)}>\n                    <h3>{game.gameId}</h3>\n                </Link>\n            </nav>\n        )\n    }\n    return (\n        <nav>\n            <Link to='/'>\n                <h3>Home</h3>\n            </Link>\n            <Link to='/${}'>\n                    <h3>{}</h3>\n            </Link>\n        </nav>\n    );\n}\n\nexport default Nav;\n\n","import React, { useEffect, useRef } from 'react';\n\nexport const useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  // If your effect returns a function, React will run it when it is time to clean up.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport const useGetNestedObject = (nestedObj, pathArr) => {\n  return pathArr.reduce((obj, key) =>\n      (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj);    \n}","import React, { \n    useState,\n    useEffect,\n    useContext,\n} from 'react';\nimport './App.css';\nimport { \n    useParams,\n    Link,\n} from \"react-router-dom\";\nimport { GameContext } from './GameContext';\nimport { useInterval } from './Hooks'\nimport { get } from 'http';\n\n\nfunction Coop() {\n\n    const { gameidURL } = useParams(); \n    console.log(\"FROM COOP gameidURL: \", gameidURL)\n    // const [gameId, setGameId] = useState(gameidURL);\n    const [game, setGame]= useContext(GameContext);\n\n    console.log(\"first to render in COOP, gameidURL: \", gameidURL);\n\n\n    useEffect (() => {\n        console.log(\"PLAYER: game not set, grabbing it! \", gameidURL ); \n        getGameAPI();\n      }, []);\n    \n    //   useEffect (() => {\n    //     if (Object.entries(game).length !== 0){\n    //       setGameAPI();\n    //     }\n    //   }, [game]);\n\n    const getGameAPI = async () => {\n        try {\n            const data = await fetch(\n                '/getGame/' + gameidURL\n            );\n    \n            const gameFromAPI = await data.json(); \n            setGame({\n              ...gameFromAPI,\n              players : [...gameFromAPI.players],\n              characters : [...gameFromAPI.characters]\n            })\n    \n            console.log(\"GETGAME, gameFromAPI:\", gameFromAPI)\n        } catch (e) {\n            console.log(e);\n            return <div>Error: {e.message}</div>;\n        }\n    }; \n\n    let playersToRender = \"\";\n    if (game.players) {\n        playersToRender =  game.players.map((p) => {\n            let turnText = \"\";\n            let playerid = p.id + 1;\n            let character_0 = p.characters[0];\n            let character_1 = p.characters[1];\n            let character_0_name = \"\";\n            let character_1_name = \"\";\n            let dead = !p.active;\n            if (!character_0.active) {\n                console.log(\"character 0 dead.\", game.characters[character_0.id].name)\n                character_0_name = game.characters[character_0.id].name;\n            }\n            if (!character_1.active) {\n                console.log(\"character 1 dead.\")\n                character_1_name = game.characters[character_1.id].name;\n            }\n\n            if (p.turn) {\n                turnText = \"Your turn!\"\n            }\n            let link = \"/\" + gameidURL + \"/player/\" + playerid;\n            if (dead) {\n              return (\n                <div>\n                <div key={p.id} className=\"player\"> <Link to={link}>Player {playerid}</Link> \n                    <span> DEAD </span>\n                    <p>Num coins: {p.coins}</p>\n                    <span>{character_0_name} </span>\n                    <span>{character_1_name} </span>\n                    <br />\n                    --------------------------------\n                    \n                </div>\n                </div>\n              );             \n            }\n            else {\n                return (\n                    <div>\n                    <div key={p.id} className=\"player\"> <Link to={link}>Player {playerid}</Link> \n                        <span> {turnText}</span>\n                        <p>Num coins: {p.coins}</p>\n                        <span>{character_0_name} </span>\n                        <span>{character_1_name} </span>\n                        <br />\n                        --------------------------------\n                        \n                    </div>\n                    </div>\n                );\n            }\n        });\n    }\n   \n    useInterval(async () => {\n        // console.log(\"Polling Game\")\n        return await getGameAPI();\n    }, 7000);\n   \n    return (\n        <div>\n            <h1>Game Page for {gameidURL}</h1>\n            <p>{game.numPlayers}</p>\n            {/* <div>{game.players.map(p => (<span>{p} </span>))}</div> */}\n            {playersToRender}\n        </div>\n    );\n\n}\n\n\n\nexport default Coop;\n\n","import React, { \n  useState,\n  useEffect,\n  useContext,\n} from 'react';\nimport './App.css';\n// import Characters from './Characters'\nimport { \n  useParams,\n  Link,\n} from \"react-router-dom\";\nimport { GameContext } from './GameContext';\nimport { useInterval, useGetNestedObject } from './Hooks'\n\nfunction Player() {\n\n  console.log(\"****** new render ******\")\n\n  const { gameidURL, playeridURL } = useParams(); \n  const playerid = playeridURL - 1;\n  const [game, setGame] = useContext(GameContext);\n  const challenge_actions = ['tax','assassinate','steal','exchange','block'];\n  const block_actions = ['aid','steal','assassinate'];\n  const [chooseCharId, setChooseCharId] = useState(0); \n  const [actOnId, setActOnId] = useState([]); \n  const [actOnChecked, setActOnChecked] = useState(0);\n  // const [exchangePicks, setExchangePicks] = useState({'p0':false, 'p1': false, 'p2': false, 'p3': false}); \n  const [exchangePicks, setExchangePicks] = useState([false,false,false,false]); \n\n  const [numSelected, setNumSelected] = useState(0);\n  // const [stealingFrom, stealingFrom]\n  // const [wait, setWait] = useState(false);\n  // const [challenged, setChallenged] = false;\n  // const [coopPlayer, setCoopPlayer] = useState(0);\n\n  // console.log(\"game.challenge: \", game.challenge);\n  // console.log(\"game.passed\", game.passed);\n\n  // TODO: Can one Duke block another Duke's foreign aid?\n\n  useEffect (() => {\n    console.log(\"PLAYER: game not set, grabbing it! \", gameidURL ); \n    getGameAPI();\n  }, []);\n\n  // useEffect (() => {\n  //   if (Object.entries(game).length !== 0){\n  //     setGameAPI();\n  //   }\n  // }, [game]);\n\n\n\n  const getGameAPI = async () => {\n    try {\n        const data = await fetch(\n            '/getGame/' + gameidURL\n        );\n\n        const gameFromAPI = await data.json(); \n        setGame({\n          ...gameFromAPI,\n          players : [...gameFromAPI.players],\n          characters : [...gameFromAPI.characters]\n        });\n\n        // console.log(\"getGame, gameFromAPI:\", gameFromAPI)\n    } catch (e) {\n        console.log(e);\n        return <div>Error: {e.message}</div>;\n    }\n  };  \n\n  const setGameAPI = async () => {\n    try {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(game)\n      };\n\n      console.log(\"POST! posting game: \", game);\n\n      const data = await fetch('/setGame', requestOptions);\n      const gameFromAPI = await data.json();\n\n      console.log(\"POST!! gameFromAPI coins: \", gameFromAPI.players[playerid].coins);\n\n    } catch (e) {\n        console.log(e);\n        return <div>Error: {e.message}</div>;\n    }\n  };  \n\n  function updateGameAPI() {\n    setGame({\n      ...game,\n      players : [...game.players],\n      characters : [...game.characters]\n    })\n    setGameAPI();\n  }\n\n  function updateGame() {\n    setGame({\n      ...game,\n      players : [...game.players],\n      characters : [...game.characters]\n    })\n  }\n\n  function passedSet(id) {\n    game.players.forEach( (p, i) => {\n      if (i != id) {\n        p.passed = true; // rename to pass\n      } else {\n        p.passed = false;\n      }\n    })\n    game.passed = game.numPlayers - 2;\n  }\n      // // game.players[playerid].passed = true;\n  function action(e) {\n    console.log(\"*** ACTION CHOSEN\")\n\n    const action = e.target.name;\n    game.actionTaken = action;\n    // console.log(!challenge && (action == \"steal\" || action == \"exchange\" || action == \"aid\" || action == \"tax\"))\n    // if (!challenge && (action == \"steal\" || action == \"exchange\" || action == \"aid\" || action == \"tax\")) {\n    //   game.challenge = true;\n    //   console.log(\"not calling takeAction\")\n    //   updateGame();\n    // if (action != \"steal\"){\n      takeAction(action);\n    // }\n  }\n  \n  console.log(actOnId);\n  const takeAction = async(action) => {\n    // e.preventDefault();\n    if (game.players[playerid].turn && !game.challenge) {\n      let body = {};\n      // const action = e.target.name;\n      console.log(\"ACTION: \", action);\n\n      if (action == \"steal\" || action == \"coop\" || action == \"exchange\" || action == \"assassinate\" && actOnId) {\n        body = {\"gameId\": gameidURL,  \"playerId\": playerid, \"action\": action, \"actOnId\": actOnId};\n      } else {\n        body = {\"gameId\": gameidURL,  \"playerId\": playerid, \"action\": action, \"actOnId\": []};\n      }\n\n      console.log(\"POST takeTurn \", body);\n      try {\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        };\n\n        const data = await fetch('/takeTurn', requestOptions);\n        const gameFromAPI = await data.json();\n        setGame({\n          ...gameFromAPI,\n          players : [...gameFromAPI.players],\n          characters : [...gameFromAPI.characters]\n        });\n\n        console.log(\"game from API:\");\n        console.log(gameFromAPI);\n\n        console.log(game);\n      } catch(e) {\n          console.log(e);\n          return <div>Error: {e.message}</div>;\n      }\n    }\n  }\n\n  const challenge = async(action) => {\n    \n    if (can_challenge) {\n      let body = {\"gameId\": gameidURL, \"playerId\": playerid}\n      console.log(\"POST: \", body);\n      try {\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        };\n\n        const data = await fetch('/challenge', requestOptions);\n        const gameFromAPI = await data.json();\n\n        setGame({\n          ...gameFromAPI,\n          players : [...gameFromAPI.players],\n          characters : [...gameFromAPI.characters]\n        });\n      } catch(e) {\n        console.log(e);\n        return <div>Error: {e.message}</div>;\n      }\n    }\n  }\n\n  const challengeBlock = async(action) => {\n    \n      let body = {\"gameId\": gameidURL, \"playerId\": playerid}\n      console.log(\"POST: \", body);\n      try {\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        };\n\n        const data = await fetch('/challengeBlock', requestOptions);\n        const gameFromAPI = await data.json();\n\n        setGame({\n          ...gameFromAPI,\n          players : [...gameFromAPI.players],\n          characters : [...gameFromAPI.characters]\n        });\n      } catch(e) {\n        console.log(e);\n        return <div>Error: {e.message}</div>;\n      }\n  }\n\n  const block = async(action) => {\n    if (can_block) {\n      let body = {\"gameId\": gameidURL, \"playerId\": playerid}\n      console.log(\"POST: \", body);\n      try {\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        };\n\n        const data = await fetch('/block', requestOptions);\n        const gameFromAPI = await data.json();\n\n        setGame({\n          ...gameFromAPI,\n          players : [...gameFromAPI.players],\n          characters : [...gameFromAPI.characters]\n        });\n      } catch(e) {\n        console.log(e);\n        return <div>Error: {e.message}</div>;\n      }\n    }\n  }\n\n\n  function _block(e) {\n    e.preventDefault();\n    console.log(\"***BLOCK***\");\n\n    let turnPlayer = game.players[game.pTurnId];\n    let blockingPlayer = game.players[playerid];\n\n    game.players[playerid].actionTaken = 'block';\n    // turnPlayer.blockedBy = playerid;\n    game.blockedBy = playerid;\n    game.challenge = true\n\n    if (can_block) {\n      if (turnPlayer.actionTaken == 'aid') {\n        turnPlayer.coins = turnPlayer.coins - 2;\n      }\n      if (turnPlayer.actionTaken == 'steal') {\n        turnPlayer.coins = turnPlayer.coins - 2;\n        blockingPlayer.coins = blockingPlayer.coins + 2;\n        console.log(\"turnplayer coins: \" + turnPlayer.coins + \" blocking player coins: \" + blockingPlayer.coins);\n      }\n\n      // nextTurn();\n      passedSet(game.pTurnId);\n      updateGameAPI();\n    }\n\n  }\n\n\n    // When challenging a block counteraction, playerid = game.pturnid\n  function challenge_block(e) {\n    e.preventDefault();\n\n    console.log(\"***CHALLENGE BLOCK***\");\n\n    // let blockingPlayer = game.players[game.players[game.pTurnId].blockedBy];\n    let blockingPlayer = game.players[game.blockedBy];\n\n\n    let turnPlayer = game.players[game.pTurnId];\n    let c_0 =  blockingPlayer.characters[0]; \n    let c_1 =  blockingPlayer.characters[1];\n    let success = false;\n    \n    console.log(\"player 0: \", c_0.id);\n    console.log(\"player 1: \", c_1.id);\n\n    if (can_block) {\n      if (c_0.active && c_1.active\n      && game.characters[c_0.id].block != turnPlayer.actionTaken \n      && game.characters[c_1.id].block != turnPlayer.actionTaken) {\n        console.log(\"Challenge Block: SUCCESS Lose Player!, both are active\");\n        blockingPlayer.losePlayer = true;\n        success = true;\n        // if (blockingPlayer.actionTaken == 'tax') {\n        //   blockingPlayer.coins = blockingPlayer.coins - 3;\n        // }\n      } else if (c_0.active && game.characters[c_0.id].block != turnPlayer.actionTaken\n        && !c_1.active) {\n        console.log(\"Challenge Block: SUCCESS Lose Player!, only 0 is active\");\n        c_0.active = false;\n        blockingPlayer.active = false;\n        blockingPlayer.influence -= 1;\n        success = true;\n        // nextTurn();\n      } else if (c_1.active && game.characters[c_1.id].block != turnPlayer.actionTaken && !c_0.active) {\n        console.log(\"Challenge Block: SUCCESS Lose Player!, only 1 is active\");\n        c_1.active = false;\n        blockingPlayer.active = false;\n        blockingPlayer.influence -= 1;\n        success = true;\n        // nextTurn();\n      } else {\n        // challenge failed.\n        // player that challenged the block (the player whose turn it currently is) loses a player!\n        console.log(\"*** players id lose player!!!\")\n        game.players[playerid].losePlayer = true;\n      }\n    }\n\n    if (success) {\n      if (blockingPlayer.actionTaken == 'steal') {\n        console.log(\"BLOCK FAILED. giving $ back\");\n        blockingPlayer.coins = blockingPlayer.coins - 2;        \n        turnPlayer.coins = turnPlayer.coins + 2;\n\n        console.log(\"GAME BELOW ->\")\n        console.log(game);\n      }\n    }\n\n    // if (!blockingPlayer.losePlayer) {\n    //   console.log(\"called nextTurn()\");\n    //   nextTurn();\n    // }\n      // reset passed\n    // passedReset();      \n    updateGameAPI();\n      \n      // console.log(\"Challenge: after setGame: \")\n    // console.log(game);\n    //console.log(\"game.players[playerid].challenge: \", game.players[playerid].challenge)\n\n  }\n\n  // function pass(e) {\n  //   e.preventDefault();\n  //   game.passed = game.passed + 1;\n  //   game.players[playerid].passed = true;\n    \n  //   // TODO: need to active players count\n  //   if (game.passed == game.activePlayers - 1){  \n  //     nextTurn();\n  //   }\n\n  //   updateGameAPI();\n\n  // }\n\n  const pass = async(e) => {\n    if (can_challenge || can_block) {\n      let body = {\"gameId\": gameidURL, \"playerId\": playerid}\n\n      try {\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        };\n\n        const data = await fetch('/pass', requestOptions);\n        const gameFromAPI = await data.json();\n\n        setGame({\n          ...gameFromAPI,\n          players : [...gameFromAPI.players],\n          characters : [...gameFromAPI.characters]\n        });\n      } catch(e) {\n        console.log(e);\n        return <div>Error: {e.message}</div>;\n      }\n    }\n  }\n\n  const loseCharacterAPI = async(characterToLose) => {\n    if (can_challenge || can_block) {\n      let body = {\"gameId\": gameidURL, \"playerId\": playerid, \"characterToLose\": characterToLose}\n\n      try {\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(body)\n        };\n\n        const data = await fetch('/loseCharacter', requestOptions);\n        const gameFromAPI = await data.json();\n\n        setGame({\n          ...gameFromAPI,\n          players : [...gameFromAPI.players],\n          characters : [...gameFromAPI.characters]\n        });\n      } catch(e) {\n        console.log(e);\n        return <div>Error: {e.message}</div>;\n      }\n    }\n  }\n\n\n  function getNestedObject(nestedObj, pathArr) {\n    return pathArr.reduce((obj, key) =>\n        (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj);    \n  }\n\n  function handleChooseCharChange(e) {\n    e.preventDefault();\n    setChooseCharId(e.target.value);\n    console.log(\"handleChooseCharChange, e.target.value \", e.target.value, \"choosecharid: \", chooseCharId);\n\n  }\n\n  function handleLoseCharSubmit(e) {\n    e.preventDefault();\n    setChooseCharId(e.target.value);\n    console.log(\"^^^^^^^^^^^^^^^^^^^^^^^^^ \", chooseCharId);\n    // game.players[playerid].characters[parseInt(chooseCharId)].active = false;\n    // game.players[playerid].losePlayer = false;\n    // game.players[playerid].influence -= 1;\n    // nextTurn();\n    // updateGameAPI();\n    loseCharacterAPI(chooseCharId);\n  }\n\n  function handleSwapCard(e) {\n    console.log(\"handleSwapCard\")\n    e.preventDefault();\n    setChooseCharId(e.target.value);\n    console.log(\"chooseCharId: \", chooseCharId);\n    game.players[playerid].characters[chooseCharId].swap = game.players[playerid].characters[chooseCharId].id;\n    updateGame();\n    // takeAction(e.target.name);\n    setChooseCharId(null);\n    console.log(\"handleSwapCard, chooseCharId.id: \", game.players[playerid].characters[chooseCharId].id);\n  } \n\n  function handleActOnChange(e) {\n    // actOnId = e.target.value;\n    setActOnChecked(e.target.value);\n    console.log(\"in handleActOnChange actOnId[0]\", actOnChecked);\n    console.log(\"actOnId[0] == e.target.value \", actOnChecked == e.target.value);\n\n  }\n\n  function handleActOnSubmit(e) {\n    // actOnId[0] = e.target.value;\n    // setActOnId(actOnId);\n    e.preventDefault();\n    actOnId[0] = actOnChecked;\n    setActOnId(actOnId);\n    \n    console.log(\"in handleActOnSubmit, actOnId: \", actOnId);\n    takeAction(e.target.name);\n    setActOnId([]);\n  }\n\n\n  function handleExchangePicksChange(e){\n    // console.log(exchangePicks);\n\n    console.log(\"game.players[playerid].influence: \", game.players[playerid].influence)\n    const value = !exchangePicks[e.target.name];\n    console.log(\"****HANDLE CHANGE numSelected: \", numSelected);\n    if (numSelected < game.players[playerid].influence && value) {\n      console.log(\"CHECK!\");\n      exchangePicks[e.target.name] = !exchangePicks[e.target.name];\n      setExchangePicks(exchangePicks);\n      setNumSelected(numSelected + 1);\n\n    }\n    if (!value) {\n      console.log(\"UNCHECK!\");\n      exchangePicks[e.target.name] = !exchangePicks[e.target.name];\n      setExchangePicks(exchangePicks);\n      setNumSelected(numSelected - 1);\n    } \n    console.log(exchangePicks);\n  }\n\n  function handleExchangePicksSubmit(e){\n    e.preventDefault();\n    if (numSelected != game.players[playerid].influence) {\n      let msg = \"Must select \" + game.players[playerid].influence + \" cards.\"\n      alert(msg);\n      return false;\n    }\n\n    exchangePicks.forEach((p,i)=>{\n      if (p){\n        setActOnId(actOnId.push(game.players[playerid].characters[i].id));\n      }\n    });\n\n    console.log(\"IN Submit, actOnId:\", actOnId);\n    takeAction('exchange');\n    setActOnId([]);\n  }\n  \n  let coins = useGetNestedObject(game, ['players', playerid, 'coins']);\n  const alive = useGetNestedObject(game, ['players', playerid, 'active']);\n  const turn = useGetNestedObject(game, ['players', playerid, 'turn']) ? \"Your turn!\" : \"\";\n  // const waitingOnMe = useGetNestedObject(game, ['waitingOnId']) == playerid ? true : false;\n  const losePlayer = useGetNestedObject(game, ['players', playerid, 'losePlayer']);\n  const stealing = turn && game.actionTaken == 'steal' ? true : false;\n  const cooping = turn && game.actionTaken == 'coop' ? true : false\n  const exchanging = turn && game.actionTaken == 'exchange' ? true : false;\n  const assassinating = turn && game.actionTaken == 'assassinate' ? true : false;\n\n  const passed = useGetNestedObject(game, ['players', playerid, 'passed']);\n  const challenged = useGetNestedObject(game, ['players', playerid, 'challenge']);\n  const can_coop = coins > 6? true: false;\n  // console.log(\"can_coop? \", can_coop);\n  const blocked = game.blockedBy !== \"\" && turn ? true : false;\n\n  const character_0 =  useGetNestedObject(game, ['players', playerid, 'characters', 0, \"id\"]); \n  const character_1 =  useGetNestedObject(game, ['players', playerid, 'characters', 1, \"id\"]);\n  const character_0_name = useGetNestedObject(game, ['characters', character_0, 'name']);\n  const character_1_name = useGetNestedObject(game, ['characters', character_1, 'name']); \n  const character_0_active = useGetNestedObject(game, ['players', playerid, 'characters', 0, \"active\"]);\n  const character_1_active = useGetNestedObject(game, ['players', playerid, 'characters', 1, \"active\"]);\n  const actionChosen = useGetNestedObject(game, ['players', playerid, 'actionTaken']) ? true: false;\n  let active_players = new Array(game.numPlayers);\n  \n    for (let i = 0; i < game.numPlayers; i++ ) {\n      active_players[i] = getNestedObject(game, ['players'], 'active')? getNestedObject(game, ['characters', character_0, 'name']) : false;\n    }\n\n  let steal_players_form = \"\";\n  if (game.players) {\n    steal_players_form = game.players.map( (p, i) => {\n      if (i != playerid && p.coins > 0 && p.active) {  // Add active property to player.  Make first active player checked.\n        return ( \n          <div>\n          <input\n            type=\"radio\"\n            value={p.id}\n            checked={actOnChecked == p.id}\n            key = {p.id}\n            onChange={handleActOnChange}\n          /> {p.id + 1}\n          </div> )\n      }\n    });\n  }\n  let coop_assassinate_form = \"\";\n  if (game.players) {\n    coop_assassinate_form = game.players.map( (p, i) => {\n      if (i != playerid && p.active) {  // Add active property to player.  Make first active player checked.\n        return ( \n          <div>\n          <input\n            type=\"radio\"\n            value={p.id}\n            checked={actOnChecked == p.id}\n            key = {p.id}\n            onChange={handleActOnChange}\n          /> {p.id + 1}\n          </div> ) \n      }\n    });\n  }\n\n  let exchange_form = \"\";\n  if (game.players) {\n    // console.log(exchangePicks);\n    exchange_form = game.players[game.pTurnId].characters.map( (p, i) => {\n      // console.log(\"**** \",p);\n      if (p.active) {  // Add active property to player.  Make first active player checked.\n        return ( \n          <div>\n          <input\n            type=\"checkbox\"\n            name={i}\n            value={p.id}\n            // checked={exchangePicks.i}\n            checked={exchangePicks[i]}\n            // disabled={numSelected >= game.players[playerid].influence}\n            key = {i}\n            onChange={handleExchangePicksChange}\n          /> {game.characters[p.id].name}\n          </div> );\n        } else {\n          i += 1;\n        }\n    });\n  }\n\n  let pick_card_form =\n      <div>     \n        <input\n          type=\"checkbox\"\n          value=\"0\"\n          name={character_0_name}\n          checked={chooseCharId == 0}\n          onChange={handleChooseCharChange}\n        /> {character_0_name}\n        <input\n          type=\"checkbox\"\n          value=\"1\"\n          name={character_1_name}\n          checked={chooseCharId == 1}\n          onChange={handleChooseCharChange}\n        /> {character_1_name}\n      </div>\n\n\n  const can_challenge = challenge_actions.includes(game.actionTaken);\n  const can_block = block_actions.includes(game.actionTaken);\n  \n  const someoneLosePlayer = false;\n  let i = 0;\n  while (someoneLosePlayer && i < game.numPlayers) {\n    if (getNestedObject(game, ['players', i, 'losePlayer']) == true) {\n      someoneLosePlayer = true;\n      i = i + 1;\n      break;\n    }\n  }\n\n  // console.log(\"can_challenge: \", can_challenge);\n\n  useInterval(async () => {\n    if (!turn || (turn && game.challenge)) {\n      return await getGameAPI();\n    }\n  }, 5000);\n\nconsole.log(game);\nconsole.log(\"exchanging: \", exchanging);\n  // ******* RENDER ******* \n\n  if (!alive) {\n    return (\n      <div>\n        {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n        <h1>Player Page {playeridURL} </h1>        \n        <h2>You have are DEAD </h2>\n\n        <h2>Characters</h2>\n        <div>{character_0_name} { (character_0_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n        <div>{character_1_name} { (character_1_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n     \n      </div>\n    );\n  }\n  else if (exchanging && !actOnId.length && !game.challenge) {\n    // form with exchangeOptions\n    return(\n      <div>\n        {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n\n        <div>Pick {game.players[game.pTurnId].influence} cards to keep:</div>\n        <form onSubmit={handleExchangePicksSubmit} name=\"exchange\">\n          {/* {pick_card_form} */}\n          {exchange_form}\n          <button className=\"btn btn-default\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  // Loosing one of two players. Form to choose which to lose.\n  } else if (losePlayer && character_0_active && character_1_active){ \n    return (\n    <div>\n    {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n    <div>HEY YOU LOSE A PLAYER!</div>\n    <form onSubmit={handleLoseCharSubmit}>\n      <input\n        type=\"radio\"\n        value=\"0\"\n        name={character_0_name}\n        checked={chooseCharId == 0}\n        onChange={handleChooseCharChange}\n      /> {character_0_name}\n      <input\n        type=\"radio\"\n        value=\"1\"\n        name={character_1_name}\n        checked={chooseCharId == 1}\n        onChange={handleChooseCharChange}\n      /> {character_1_name}\n      <button className=\"btn btn-default\" type=\"submit\">Submit</button>\n    </form>\n    </div>\n    // <Character ></Character>\n    );\n  }\n  // steal form.  Choose who to steal from.\n  else if (stealing && game.players[0].characters[0] && !game.challenge) { \n    return (\n      <div>\n      {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n      <div>Pick a Player to Steal From: </div>\n      <form onSubmit={handleActOnSubmit} name=\"steal\">\n        {steal_players_form}\n      <button className=\"btn btn-default\" type=\"submit\" >Submit</button>\n      </form>\n      </div>\n    )\n  } else if (assassinating && !game.actOnId.length && !game.challenge) {\n    return (\n      <div>\n      {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n      <div>Pick a Player to Assassinate: </div>\n      <form onSubmit={handleActOnSubmit} name=\"assassinate\">\n        {coop_assassinate_form}\n      <button className=\"btn btn-default\" type=\"submit\" >Submit</button>\n      </form>\n      </div>\n    )\n  }\n  // challenge check does not work here since you cannot challenge a coop.\n  else if (cooping && game.players[0].characters[0] && !game.challenge) { \n    return (\n      <div>\n      {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n      <div>Pick a Player to Coop: </div>\n      <form onSubmit={handleActOnSubmit} name=\"coop\">\n        {coop_assassinate_form}\n      <button className=\"btn btn-default\" type=\"submit\" >Submit</button>\n      </form>\n      </div>\n    )\n  }\n  // start turn, choose action to take.\n  else if (turn && !game.challenge && !game.actionTaken) { \n    return (\n      <div>\n      {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n\n      <h1>Player Page {playeridURL} </h1>\n      <h2>You have {coins} coins </h2>\n      \n      \n      <button onClick={action} name=\"income\" disabled={actionChosen}>Collect Income</button>\n      <button onClick={action} name=\"aid\" disabled={actionChosen}>Collect Foreign Aid</button>\n      <button onClick={action} name=\"tax\" disabled={actionChosen}>Collect Tax</button>\n      <button onClick={action} name=\"exchange\" disabled={actionChosen}>Exchange</button>\n      {/* LEFT OFF HERE, should on click event be steal or action? */}\n      <button onClick={action} name=\"steal\" disabled={actionChosen}>Steal</button>\n      <button onClick={action} name=\"assassinate\" disabled={actionChosen || (coins < 3)}>Assassinate</button>\n      <button onClick={action} name=\"coop\" disabled={!can_coop || actionChosen}>Coop!</button>\n\n      <h2>Characters</h2>\n      <div>{character_0_name} { (character_0_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n      <div>{character_1_name} { (character_1_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n      \n    </div>\n    )\n  // Chance to block aide, challenge action, or block.\n  } else if (game.challenge && !turn ) { \n    return (\n      <div>\n        {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n        \n        <h1>Player Page {playeridURL} </h1>        \n        <h2>You have {coins} coins </h2>\n\n        <span>Challenge/Counteraction/Pass</span> <br></br>\n        <button onClick={challenge} disabled={(!can_challenge || challenged || passed) }>Challenge</button>\n        <button onClick={block} disabled={(!can_block || challenged || passed)}>Block</button>\n        {/* <button onClick={challenge}>Counteract</button> */}\n        <button onClick={pass} disabled={(passed || challenged)}>Pass</button>\n\n        <h2>Characters</h2>\n        <div>{character_0_name} { (character_0_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n        <div>{character_1_name} { (character_1_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n      \n      </div>\n    );\n  // Chance to challenge counteraction (block).\n  } else if (game.challenge && turn && blocked) { \n    return (\n      <div>\n        {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n       \n        <h1>Player Page {playeridURL} </h1>        \n        <h2>You have {coins} coins </h2>\n        <span>Challenge or Pass the Block</span> <br></br>\n\n        { (!challenged && !passed) ? <button onClick={challengeBlock}>Challenge</button> : null }\n        { !(passed) ? <button onClick={pass}>Pass</button> : null }\n\n        <h2>Characters</h2>\n        <div>{character_0_name} { (character_0_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n        <div>{character_1_name} { (character_1_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n      \n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {/* <Link to={\"/\".concat(gameidURL)}>{gameidURL}</Link> */}\n        \n        <h1>Player Page {playeridURL} </h1>        \n        <h2>You have {coins} coins </h2>\n\n        <h2>Characters</h2>\n        <div>{character_0_name} { (character_0_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n        <div>{character_1_name} { (character_1_active) ? <span>- Active</span> : <span>- Dead</span> } </div>\n     \n      </div>\n    );\n  }\n  \n}\n\n\n\nexport default Player;\n","import React, { useState, useContext } from 'react';\nimport Nav from './Nav';\nimport Coop from './Coop';\nimport Player from './Player';\nimport './App.css';\nimport { \n  BrowserRouter as Router, \n  Switch, \n  Route, \n  useHistory\n} from 'react-router-dom';\nimport { GameContext } from './GameContext';\nimport { GameProvider } from './GameContext';\n\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Router>\n        <Switch>\n          <GameProvider>\n            <Nav/>\n            <Route path='/' exact component={GameIdForm} />\n            <Route path='/:gameidURL' exact>\n              <Coop />\n            </Route>\n            <Route path='/:gameidURL/player/:playeridURL'>\n              <Player />\n            </Route>\n          </GameProvider>\n        </Switch>\n      </Router>\n    </div>\n    );\n}\n\nfunction GameIdForm() {\n  const [gameId, setGameId] = useState('this-is-my-game');\n  const [game, setGame] = useContext(GameContext);\n  // const [gameId, setGameId] = gid;\n  // const [game, setGame] = g;\n\n  let history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    history.push(`${gameId}`);\n  }\n\n  const handleChange = (event) => {\n    setGameId(event.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\" \n        value={gameId}\n        onChange={(event) => {setGameId(event.target.value)}}\n      />\n    </form>\n  );\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}